// RubyScript.h : CRubyScript の宣言

#pragma once
#include "resource.h"       // メイン シンボル



#include "RScript22_i.h"



#if defined(_WIN32_WCE) && !defined(_CE_DCOM) && !defined(_CE_ALLOW_SINGLE_THREADED_OBJECTS_IN_MTA)
#error "DCOM の完全サポートを含んでいない Windows Mobile プラットフォームのような Windows CE プラットフォームでは、単一スレッド COM オブジェクトは正しくサポートされていません。ATL が単一スレッド COM オブジェクトの作成をサポートすること、およびその単一スレッド COM オブジェクトの実装の使用を許可することを強制するには、_CE_ALLOW_SINGLE_THREADED_OBJECTS_IN_MTA を定義してください。ご使用の rgs ファイルのスレッド モデルは 'Free' に設定されており、DCOM Windows CE 以外のプラットフォームでサポートされる唯一のスレッド モデルと設定されていました。"
#endif

using namespace ATL;


// CRubyScript

class ATL_NO_VTABLE CRubyScript :
	public CComObjectRootEx<CComMultiThreadModel>,
	public CComCoClass<CRubyScript, &CLSID_RubyScript>,
	public IActiveScript,
	public IActiveScriptParse,
	public IActiveScriptParseProcedure
{
public:
	CRubyScript()
	{
		m_pUnkMarshaler = NULL;
	}

DECLARE_REGISTRY_RESOURCEID(IDR_RUBYSCRIPT)


BEGIN_COM_MAP(CRubyScript)
	COM_INTERFACE_ENTRY(IActiveScriptParse)
	COM_INTERFACE_ENTRY(IActiveScript)
	COM_INTERFACE_ENTRY(IActiveScriptParseProcedure)
	COM_INTERFACE_ENTRY(IServiceProvider)
	COM_INTERFACE_ENTRY_AGGREGATE(IID_IMarshal, m_pUnkMarshaler.p)
END_COM_MAP()



	DECLARE_PROTECT_FINAL_CONSTRUCT()
	DECLARE_GET_CONTROLLING_UNKNOWN()

	HRESULT FinalConstruct()
	{
		return CoCreateFreeThreadedMarshaler(
			GetControllingUnknown(), &m_pUnkMarshaler.p);
	}

	void FinalRelease()
	{
		m_pUnkMarshaler.Release();
	}

	CComPtr<IUnknown> m_pUnkMarshaler;

public:
        virtual HRESULT STDMETHODCALLTYPE SetScriptSite( 
            /* [in] */ __RPC__in_opt IActiveScriptSite *pass) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetScriptSite( 
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt void **ppvObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetScriptState( 
            /* [in] */ SCRIPTSTATE ss) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetScriptState( 
            /* [out] */ __RPC__out SCRIPTSTATE *pssState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddNamedItem( 
            /* [in] */ __RPC__in LPCOLESTR pstrName,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddTypeLib( 
            /* [in] */ __RPC__in REFGUID rguidTypeLib,
            /* [in] */ DWORD dwMajor,
            /* [in] */ DWORD dwMinor,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetScriptDispatch( 
            /* [in] */ __RPC__in LPCOLESTR pstrItemName,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppdisp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentScriptThreadID( 
            /* [out] */ __RPC__out SCRIPTTHREADID *pstidThread) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetScriptThreadID( 
            /* [in] */ DWORD dwWin32ThreadId,
            /* [out] */ __RPC__out SCRIPTTHREADID *pstidThread) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetScriptThreadState( 
            /* [in] */ SCRIPTTHREADID stidThread,
            /* [out] */ __RPC__out SCRIPTTHREADSTATE *pstsState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InterruptScriptThread( 
            /* [in] */ SCRIPTTHREADID stidThread,
            /* [in] */ __RPC__in const EXCEPINFO *pexcepinfo,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IActiveScript **ppscript) = 0;
#if defined(_WIN64)
		// IActiveScriptParse64
        virtual HRESULT STDMETHODCALLTYPE InitNew( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddScriptlet( 
            /* [in] */ __RPC__in LPCOLESTR pstrDefaultName,
            /* [in] */ __RPC__in LPCOLESTR pstrCode,
            /* [in] */ __RPC__in LPCOLESTR pstrItemName,
            /* [in] */ __RPC__in LPCOLESTR pstrSubItemName,
            /* [in] */ __RPC__in LPCOLESTR pstrEventName,
            /* [in] */ __RPC__in LPCOLESTR pstrDelimiter,
            /* [in] */ DWORDLONG dwSourceContextCookie,
            /* [in] */ ULONG ulStartingLineNumber,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName,
            /* [out] */ __RPC__out EXCEPINFO *pexcepinfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ParseScriptText( 
            /* [in] */ __RPC__in LPCOLESTR pstrCode,
            /* [in] */ __RPC__in LPCOLESTR pstrItemName,
            /* [in] */ __RPC__in_opt IUnknown *punkContext,
            /* [in] */ __RPC__in LPCOLESTR pstrDelimiter,
            /* [in] */ DWORDLONG dwSourceContextCookie,
            /* [in] */ ULONG ulStartingLineNumber,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__out VARIANT *pvarResult,
            /* [out] */ __RPC__out EXCEPINFO *pexcepinfo) = 0;

		// IActiveScriptParseProcedure64
        virtual HRESULT STDMETHODCALLTYPE ParseProcedureText( 
            /* [in] */ __RPC__in LPCOLESTR pstrCode,
            /* [in] */ __RPC__in LPCOLESTR pstrFormalParams,
            /* [in] */ __RPC__in LPCOLESTR pstrProcedureName,
            /* [in] */ __RPC__in LPCOLESTR pstrItemName,
            /* [in] */ __RPC__in_opt IUnknown *punkContext,
            /* [in] */ __RPC__in LPCOLESTR pstrDelimiter,
            /* [in] */ DWORDLONG dwSourceContextCookie,
            /* [in] */ ULONG ulStartingLineNumber,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppdisp) = 0;

#else
		// IActiveScriptParse32
        virtual HRESULT STDMETHODCALLTYPE InitNew( void) = 0;

        virtual HRESULT STDMETHODCALLTYPE AddScriptlet( 
            /* [in] */ __RPC__in LPCOLESTR pstrDefaultName,
            /* [in] */ __RPC__in LPCOLESTR pstrCode,
            /* [in] */ __RPC__in LPCOLESTR pstrItemName,
            /* [in] */ __RPC__in LPCOLESTR pstrSubItemName,
            /* [in] */ __RPC__in LPCOLESTR pstrEventName,
            /* [in] */ __RPC__in LPCOLESTR pstrDelimiter,
            /* [in] */ DWORD dwSourceContextCookie,
            /* [in] */ ULONG ulStartingLineNumber,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName,
            /* [out] */ __RPC__out EXCEPINFO *pexcepinfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ParseScriptText( 
            /* [in] */ __RPC__in LPCOLESTR pstrCode,
            /* [in] */ __RPC__in LPCOLESTR pstrItemName,
            /* [in] */ __RPC__in_opt IUnknown *punkContext,
            /* [in] */ __RPC__in LPCOLESTR pstrDelimiter,
            /* [in] */ DWORD dwSourceContextCookie,
            /* [in] */ ULONG ulStartingLineNumber,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__out VARIANT *pvarResult,
            /* [out] */ __RPC__out EXCEPINFO *pexcepinfo) = 0;

		// IActiveScriptParseProcedure32
        virtual HRESULT STDMETHODCALLTYPE ParseProcedureText( 
            /* [in] */ __RPC__in LPCOLESTR pstrCode,
            /* [in] */ __RPC__in LPCOLESTR pstrFormalParams,
            /* [in] */ __RPC__in LPCOLESTR pstrProcedureName,
            /* [in] */ __RPC__in LPCOLESTR pstrItemName,
            /* [in] */ __RPC__in_opt IUnknown *punkContext,
            /* [in] */ __RPC__in LPCOLESTR pstrDelimiter,
            /* [in] */ DWORD dwSourceContextCookie,
            /* [in] */ ULONG ulStartingLineNumber,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IDispatch **ppdisp) = 0;
#endif

};

OBJECT_ENTRY_AUTO(__uuidof(RubyScript), CRubyScript)
